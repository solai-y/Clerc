name: CI for main Branch

on:
  pull_request:
    branches: [main]

jobs:
  check-pr-source:
    runs-on: ubuntu-latest
    steps:
      - name: Fail if PR is not from dev branch
        run: |
          echo "Source branch: ${{ github.head_ref }}"
          if [ "${{ github.head_ref }}" != "dev" ]; then
            echo "‚ùå Only PRs from dev branch are allowed to merge to main."
            exit 1
          fi

  build-and-test:
    needs: check-pr-source   # <-- Add this line!
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file for Docker Compose
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> backend/.env
          echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> backend/.env

      - name: Start backend services
        run: |
          cd backend
          docker compose up -d
          sleep 10  # Wait for services to initialize

      #! INTEGRATION TESTS
      # Run company-service integration tests
      - name: Run company-service tests
        working-directory: backend/company-service
        run: |
          pip install -r requirements.txt
          pytest -s tests/integration -v

      # Run s3-service integration tests
      - name: Run s3-service tests
        working-directory: backend/s3-service
        run: |
          pip install -r requirements.txt
          pytest -s tests/integration -v

      # Run document-service integration tests
      - name: Run document-service tests
        working-directory: backend/document-service
        run: |
          pip install -r requirements.txt
          pytest -s tests/integration -v

      # Run ai-service integration tests
      - name: Run ai-service tests
        working-directory: backend/ai-service
        run: |
          pip install -r requirements.txt
          pytest -s tests/integration -v

      # Run llm-service integration tests
      - name: Run llm-service tests
        working-directory: backend/llm-service
        run: |
          pip install -r tests/requirements.txt
          pytest -s tests/integration -v

      # Run prediction-service integration tests
      - name: Run prediction-service tests
        working-directory: backend/prediction-service
        run: |
          pip install -r requirements.txt
          pytest -s tests/integration -v

      # Run text-extraction-service integration tests
      - name: Run text-extraction-service tests
        working-directory: backend/text-extraction-service
        run: |
          pip install -r requirements.txt
          pip install -r tests/requirements.txt
          pytest -s tests/integration -v

      #! E2E TESTS
      # Run company-service E2E tests
      - name: Run company-service E2E tests
        working-directory: backend/company-service
        run: |
          pip install -r requirements.txt
          pytest -s tests/e2e -v

      # Run s3-service E2E tests
      - name: Run s3-service E2E tests
        working-directory: backend/s3-service
        run: |
          pip install -r requirements.txt
          pytest -s tests/e2e -v

      # Run document-service E2E tests
      - name: Run document-service E2E tests
        working-directory: backend/document-service
        run: |
          pip install -r requirements.txt
          pytest -s tests/e2e -v

      # Run ai-service E2E tests
      - name: Run ai-service E2E tests
        working-directory: backend/ai-service
        run: |
          pip install -r requirements.txt
          pytest -s tests/e2e -v

      # Run llm-service E2E tests
      - name: Run llm-service E2E tests
        working-directory: backend/llm-service
        run: |
          pip install -r tests/requirements.txt
          pytest -s tests/e2e -v

      # Run text-extraction-service E2E tests
      - name: Run text-extraction-service E2E tests
        working-directory: backend/text-extraction-service
        run: |
          pip install -r requirements.txt
          pip install -r tests/requirements.txt
          pytest -s tests/e2e -v

      #! UNIT TESTS
      # Run document-service unit tests
      - name: Run document-service unit tests
        working-directory: backend/document-service
        run: |
          pip install -r requirements.txt
          pytest -s tests/unit -v

      # Run llm-service unit tests
      - name: Run llm-service unit tests
        working-directory: backend/llm-service
        run: |
          pip install -r tests/requirements.txt
          pytest -s tests/unit -v

      # Run prediction-service unit tests
      - name: Run prediction-service unit tests
        working-directory: backend/prediction-service
        run: |
          pip install -r requirements.txt
          pytest -s tests/unit -v

      # Run text-extraction-service unit tests
      - name: Run text-extraction-service unit tests
        working-directory: backend/text-extraction-service
        run: |
          pip install -r requirements.txt
          pip install -r tests/requirements.txt
          pytest -s tests/unit -v

      # Tear down services
      - name: Tear down services
        if: always()
        run: cd backend && docker compose down
